package org.example.Kotlin.StepicKotlin.task3

import java.lang.Math.*

/*
* Из-за анатомических особенностей жителей Созвездия Жука земляне постоянно
* ошибаются при рассадке
* дипломатических делегаций пришельцев в худшую сторону - не хватает стульев.
* Проблема возникает из-за древнего рефлекса - по мере роста  группы, пришельцы
* начинают автоматически занимать больше сидячих мест, чем им на самом деле требуется.
* Анализ видеозаписей позволил считать, что зависимость количества стульев (y) от
* количества пришельцев (х) имеет вид:
* y = x + z
* где z - это целая часть от числа (x/2).
* Для предотвращения конфликтов на почве недостатка посадочных мест вам
* необходимо создать функцию calcChairs для расчета количества стульев.
* Функция принимает один аргумент (количество пришельцев) и возвращает
* требуемое целое количество стульев.
* Из консоли/В консоль ничего читать/писать не нужно! Необходимо реализовать
* только функцию calcChairs.
*
* Подсказка: задачу можно решить без floor.
* ----------------------
* Input 1:
* 44
* Output 1:
* 66
* -----------------------
* Input 2:
* 70
* Output 2:
* 105
* ------------------------
* Input 3:
* 6
* Output 3:
* 9
* ------------------------
* Input 4:
* 12
* Output 4:
* 18
* */
fun main(args : Array<String>) {
    var count : Double
    var temp : String?
    temp = readLine()
    var result: Int
    try {
        if(temp != null)
        count = temp.toDouble()
        else return
    } catch (e : NumberFormatException){
        println("Uncorrected value")
        return
    }
    result = calcChairs(count)
    println("$result")

}

fun calcChairs(a: Double) : Int{
    var b : Double = a /2
    return (a + b).toInt()
}